<?xml version="1.0" encoding="UTF-8"?>
<beans:beans
	xmlns="http://www.springframework.org/schema/mvc"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:beans="http://www.springframework.org/schema/beans"
	xmlns:context="http://www.springframework.org/schema/context"
	xsi:schemaLocation="http://www.springframework.org/schema/mvc 
		https://www.springframework.org/schema/mvc/spring-mvc.xsd
		http://www.springframework.org/schema/beans 
		https://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/context 
		https://www.springframework.org/schema/context/spring-context.xsd
		
		http://www.springframework.org/schema/aop 
        http://www.springframework.org/schema/aop/spring-aop.xsd
        http://www.springframework.org/schema/tx 
        http://www.springframework.org/schema/tx/spring-tx.xsd">

	<!-- DispatcherServlet Context: defines this servlet's request-processing 
		infrastructure -->

	<!-- Enables the Spring MVC @Controller programming model -->
	<annotation-driven />
	<context:spring-configured />
	<context:annotation-config />

	<!-- Handles HTTP GET requests for /resources/** by efficiently serving 
		up static resources in the ${webappRoot}/resources directory -->
	<resources mapping="/resources/**" location="/resources/" />

	<!-- Resolves views selected for rendering by @Controllers to .jsp resources 
		in the /WEB-INF/views directory -->
	<beans:bean
		class="org.springframework.web.servlet.view.InternalResourceViewResolver">
		<beans:property name="prefix" value="/WEB-INF/views/" />
		<beans:property name="suffix" value=".jsp" />
	</beans:bean>
  
    <!-- 테스트테스트 -->
   

	<!-- step1. 스프링의 어노테이션을 사용할 수 있도록 하는 설정 -->
	<!-- @RequestMapping , @ExceptionHandler 등과 같은 어노테이션을 사용하는 경우 설정해야 함 -->
	<annotation-driven />
	<context:spring-configured />
	<context:annotation-config />

	<!-- step2. 어노테이션이 지정된 클래스를 컨테이너에 자동으로 동록되게 하는 설정 -->
	<!-- 복수의 패키지를 사용하고 싶은 경우 <context:component-scan> 태그를 여러개 작성 -->
	<context:component-scan
		base-package="com.sol" />


	<beans:bean id="dataSource"
		class="org.apache.commons.dbcp2.BasicDataSource">
		<beans:property name="driverClassName"
			value="com.mysql.cj.jdbc.Driver" />
		<beans:property name="url"
			value="jdbc:mysql://192.168.0.109:3306/libProject?useUnicode=true&amp;characterEncoding=utf8" />
		<beans:property name="username" value="Myoung" />
		<beans:property name="password" value="1234" />

		<beans:property name="defaultAutoCommit" value="true" />
		<beans:property name="poolPreparedStatements"
			value="true" />
		<beans:property name="cacheState" value="true" />
	</beans:bean>

	<!-- step4. SessionFactory 설정 :: MyBatis가 사용할 Database에 연결하도록 설정 -->
	<beans:bean id="sqlSessionFactory"
		class="org.mybatis.spring.SqlSessionFactoryBean">
		<beans:property name="dataSource" ref="dataSource" />
		<beans:property name="configLocation"
			value="classpath:Configuration.xml" />

		<!-- mybatis 디렉토리에 xml 파일만 추가해주면 알아서 xml내의 쿼리 자동 인식 -->
		<!-- <beans:property name="m erLocations" value="classpath*:mybatis/**/mapper*.xml" 
			/> -->
	</beans:bean>

	<!-- MyBatis의 CRUD 템플릿을 사용할 수 있도록 설정 -->
	<beans:bean id="sqlSession"
		class="org.mybatis.spring.SqlSessionTemplate" scope="singleton">
		<beans:constructor-arg index="0"
			ref="sqlSessionFactory" />
	</beans:bean>

</beans:beans>
